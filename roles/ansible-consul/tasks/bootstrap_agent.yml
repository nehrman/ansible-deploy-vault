---

### Block used to read or create the Agent's token used by all Consul Agents

- block: 
    - name: Read ACL Agent token from previously bootstrapped server
      command: "cat {{ consul_config_path }}/.agent_token"
      register: agent_config_read
      no_log: true
      run_once: true


    - name: Save acl_agent_token from existing configuration
      set_fact:
        consul_acl_agent_token: "{{ agent_config_read.stdout }}"
      no_log: true

  when:
    - acl_agent_state.stat.exists | bool
    - (consul_acl_agent_token is not defined or consul_acl_agent_token | length == 0)

- block:
    - name: Create Agent ACL Policy on Consul
      uri:
        body_format: json
        body: |
            {
              "Name": "{{ consul_agent_policy_name }}",
              "Description": "Consul agent token",
              "Rules": "{{ lookup('file', 'agent_acl.json') }}"
            }
        method: PUT
        url: http://{{ consul_client_address }}:8500/v1/acl/policy
        headers:
          X-Consul-Token: "{{ consul_acl_bootstrap_token }}"
      run_once: true
      ignore_errors: true
  
    - name: Generate Agent Token
      uri: 
        body_format: json
        body: |
          {
            "Description": "Agent token",
            "Policies": [{"Name": "{{ consul_agent_policy_name }}"}],
            "Local": false
          }
        method: PUT
        url: http://{{ consul_client_address }}:8500/v1/acl/token
        headers:
          X-Consul-Token: "{{ consul_acl_bootstrap_token }}"
        return_content: yes
      register: consul_acl_agent_token_keygen
      run_once: true

    - name: Store Agent ACL Secret ID locally
      copy:
        content: "{{ consul_acl_agent_token_keygen.json.SecretID }}"
        dest: "{{ consul_config_path }}/.agent_token"
        owner: "{{ consul_user }}"
        group: "{{ consul_group }}"
        mode: 0640
      
    - name: Create Agent bootstrapped state file
      file:
        dest: "{{ consul_acl_agent_state }}"
        state: touch    

    - name: Register Agent ACL Token for future uses
      set_fact:
        consul_acl_agent_token: "{{ consul_acl_agent_token_keygen.json.SecretID }}"

  when: 
    - not acl_agent_state.stat.exists | bool
    - (consul_acl_agent_token is not defined or consul_acl_agent_token | length == 0)

- name: Replace ACL token placeholder in Consul config
  lineinfile:
    path: "{{ consul_configd_path }}/acl.hcl"
    regexp: "## AGENT_TOKEN_PLACEHOLDER ##"
    line: "    agent = \"{{ consul_acl_agent_token }}\""
  notify: 
    - restart consul
  when: not acl_agent_state.stat.exists | bool

